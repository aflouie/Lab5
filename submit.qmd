---
title: "Lab 5"
author: "Allison Louie"
format:
  html:
    embed-resources: true
---

```{r}
library(data.table)
library(dtplyr)
library(dplyr)
library(leaflet)
library(leaflet.providers)
library(R.utils)
```

```{r}
met_url <- "https://github.com/USCbiostats/data-science-data/raw/master/02_met/met_all.gz"
tmp <- "met.gz"
if (!file.exists(tmp)) {
download.file(
url = met_url,
destfile = tmp,
)
}
dat <- fread(tmp)
head(dat)

stations <- fread("ftp://ftp.ncdc.noaa.gov/pub/data/noaa/isd-history.csv")
stations[, USAF := as.integer(USAF)]

stations[, USAF   := fifelse(USAF == 999999, NA_integer_, USAF)]
stations[, CTRY   := fifelse(CTRY == "", NA_character_, CTRY)]
stations[, STATE  := fifelse(STATE == "", NA_character_, STATE)]

stations <- unique(stations[, list(USAF, CTRY, STATE)])
stations <- stations[!is.na(USAF)]

stations[, n := 1:.N, by = .(USAF)]
stations <- stations[n == 1,][, n := NULL]
```

```{r}
merge(
  x = dat,
  y = stations,
  by.x = "USAFID",
  by.y = "USAF",
  all.x = TRUE,
  all.y = FALSE
) %>% nrow()

stations[, n := 1:.N, by = .(USAF)]
stations <- stations[n == 1,][, n := NULL]

dat <- merge(
x = dat,
y = stations,
by.x = "USAFID",
by.y = "USAF",
all.x = TRUE,
all.y = FALSE
)
head(dat[, list(USAFID, WBAN, STATE)], n = 4)
```

## Question 1: Representative station for the US

```{r}
quantile (dat$temp, probs = 0.5, na.rm = TRUE)
quantile (dat$wind.sp, probs = 0.5, na.rm = TRUE)
quantile (dat$atm.press, probs = 0.5, na.rm = TRUE)

med_data <- dat %>%
  group_by(STATE) %>%
  summarize(
    med_temp = median(temp, na.rm = TRUE),
    med_wind.sp = median(wind.sp, na.rm = TRUE),
    med_atm.press = median(atm.press, na.rm = TRUE)
  )

med_data
```

ME has median of 1014.1 atm press, 2.1 wind.sp, and temp of 18.9. VA has temp 23.4, 1.5 wind.sp, and 1015.2 atm press. WI has 2.1 wind.sp, 18.6 temp, and 1014.6 atm press. They seem relatively close to the median.

## Question 2: Representative station per state

```{r}
dat$eu_dis <- sqrt((dat$temp - med_data$med_temp)^2 +
                      (dat$wind.sp - med_data$med_wind.sp)^2 +
                      (dat$atm.press - med_data$med_atm.press)^2)

median_stations <- dat %>%
  group_by(STATE) %>%
  arrange(eu_dis, lat) %>%
  select(STATE, lat, lon, temp, wind.sp, atm.press, eu_dis)

min_station <- median_stations %>%
  group_by(STATE) %>%
  filter(lat == min(lat))
min_station
```

These are the representative stations per state.

## Question 3: In the middle?

```{r}
state_midpoints <- median_stations %>%
  group_by(STATE) %>%
  summarize(
    midpt_lat = median(lat),
    midpt_lon = median(lon)
  )

euclidean_distance <- function(lat1, lon1, lat2, lon2) {
  sqrt((lat1 - lat2)^2 + (lon1 - lon2)^2)
}

closest_stations <- state_midpoints %>%
  rowwise() %>%
  mutate(
    closest_distance = min(euclidean_distance(midpt_lat, midpt_lon, median_stations$lat, median_stations$lon))
  )

map <- leaflet() %>%
  addTiles() %>%
  addMarkers(
    data = closest_stations,
    lng = ~midpt_lon,
    lat = ~midpt_lat,
    label = ~STATE,
    icon = leaflet::makeIcon(iconUrl = NULL, iconWidth = 30, iconHeight = 30, iconAnchorX = 15, iconAnchorY = 15)
  ) %>%
  addMarkers(
    data = min_station,
    lng = ~lon,
    lat = ~lat,
    label = ~STATE,
    icon = leaflet::makeIcon(iconUrl = "http://leafletjs.com/examples/custom-icons/leaf-green.png", iconWidth = 30, iconHeight = 30, iconAnchorX = 15, iconAnchorY = 15)
  ) %>%
  addLegend(
    colors = c("green", "blue"),
    labels = c("Midpoints", "Medians"),
    title = "Locations",
    opacity = 1
  )
map
```

## Question 4: Means of means

```{r}
state_avg_temp <- dat %>%
  group_by(STATE) %>%
  summarize(mean_temp = mean(temp, na.rm = TRUE))

state_avg_temp <- state_avg_temp %>%
  mutate(
    avg_temp_level = case_when(
      mean_temp < 20 ~ "Low",
      mean_temp >= 20 & mean_temp < 25 ~ "Mid",
      mean_temp >= 25 ~ "High",
    )
  )

quantile(state_avg_temp$mean_temp, probs = c(0, 0.25, 0.5, 0.75, 1))

summary_table <- state_avg_temp %>%
  summarize(
    Num_Entries = n(),
    Num_NA_Entries = sum(is.na(mean_temp)),
    Num_Stations = n_distinct(STATE),
    Num_States_Included = n_distinct(STATE, na.rm = TRUE),
    Mean_Temperature = mean(mean_temp, na.rm = TRUE),
    Mean_Wind_Speed = mean(dat$wind.sp, na.rm = TRUE),
    Mean_Atmospheric_Pressure = mean(dat$atm.press, na.rm = TRUE)
  )

summary_table
```
